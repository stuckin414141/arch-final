Seq
  LetStmt fac0
    type: (int)->(int)
    Expr
      Ftmlk
      Requires env: false
        Args
          n0 : int
            Ref: false
        Body
          If
            Cond
              BinOp ==
                Left
                  Var n0
                Right
                  Num 0
                Type: bool
            Then
              Num 1
            Else
              BinOp *
                Left
                  Var n0
                Right
                  FtmlkApp
                    Func
                      Var fac0
                    Args
                      BinOp -
                        Left
                          Var n0
                        Right
                          Num 1
                        Type: int
                Type: int
            Type: int
    Is closure: false
    Is recursive: true
  Print
    FtmlkApp
      Func
        Var fac0
      Args
        Num 6
