Seq
  Seq
    Seq
      Seq
        Nothing
        LetStmt constructor0
          type: (int)->((int)->({inc_year: (bool)->(bool), price: int, year: int, age: int, broken: bool}))
          Expr
            Ftmlk
            Requires env: false
              Args
                price0 : int
                  Ref: false
                age0 : int
                  Ref: false
              Body
                Let ret0
                  Expr
                    RecordExp
                      Field inc_year
                        Expr
                          Ftmlk
                          Requires env: false
                            Args
                              b0 : bool
                                Ref: false
                            Body
                              Var b0
                        Type: (bool)->(bool)
                      Field price
                        Expr
                          Var price0
                        Type: int
                      Field year
                        Expr
                          BinOp -
                            Left
                              Num 2025
                            Right
                              Var age0
                            Type: int
                        Type: int
                      Field age
                        Expr
                          Var age0
                        Type: int
                      Field broken
                        Expr
                          Bool false
                        Type: bool
                  Body
                    Let inc_year0
                      Expr
                        Ftmlk
                        Requires env: true
                          Args
                            b0 : bool
                              Ref: false
                          Body
                            ESeq
                              Stmt
                                Seq
                                  Assign
                                   Target
                                      MemberOf 
                                        Expr
                                          Var ret0
                                        Type: {inc_year: (bool)->(bool), price: int, year: int, age: int, broken: bool}
                                          Field: price
                                    Expr
                                      BinOp -
                                        Left
                                          MemberOf 
                                            Expr
                                              Var ret0
                                            Type: {inc_year: (bool)->(bool), price: int, year: int, age: int, broken: bool}
                                              Field: price
                                        Right
                                          Num 1000
                                        Type: int
                                    Type: int
                                  Assign
                                   Target
                                      MemberOf 
                                        Expr
                                          Var ret0
                                        Type: {inc_year: (bool)->(bool), price: int, year: int, age: int, broken: bool}
                                          Field: age
                                    Expr
                                      BinOp +
                                        Left
                                          MemberOf 
                                            Expr
                                              Var ret0
                                            Type: {inc_year: (bool)->(bool), price: int, year: int, age: int, broken: bool}
                                              Field: age
                                        Right
                                          Num 1
                                        Type: int
                                    Type: int
                              Expr
                                Bool true
                      Body
                        ESeq
                          Stmt
                            Assign
                             Target
                                MemberOf 
                                  Expr
                                    Var ret0
                                  Type: {inc_year: (bool)->(bool), price: int, year: int, age: int, broken: bool}
                                    Field: inc_year
                              Expr
                                Var inc_year0
                              Type: (bool)->(bool)
                          Expr
                            Var ret0
                      Is closure: false
                      Recursive: false
                      Type: (bool)->(bool)
                  Is closure: true
                  Recursive: false
                  Type: {inc_year: (bool)->(bool), price: int, year: int, age: int, broken: bool}
          Is closure: false
          Is recursive: false
      LetStmt honda0
        type: {inc_year: (bool)->(bool), price: int, year: int, age: int, broken: bool}
        Expr
          FtmlkApp
          Type: {inc_year: (bool)->(bool), price: int, year: int, age: int, broken: bool}
            Func
              Var constructor0
            Args
              Num 10000
              Num 5
        Is closure: false
        Is recursive: false
    LetStmt z0
      type: bool
      Expr
        FtmlkApp
        Type: bool
          Func
            MemberOf 
              Expr
                Var honda0
              Type: {inc_year: (bool)->(bool), price: int, year: int, age: int, broken: bool}
                Field: inc_year
          Args
            Bool true
      Is closure: false
      Is recursive: false
  Print
    MemberOf 
      Expr
        Var honda0
      Type: {inc_year: (bool)->(bool), price: int, year: int, age: int, broken: bool}
        Field: price
