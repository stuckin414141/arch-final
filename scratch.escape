Seq
  Seq
    Seq
      Seq
        LetStmt add_three_numbers0
          type: (int)->((int)->((int)->(int)))
          Expr
            Ftmlk
            Requires env: false
              Args
                x0 : int
                  Ref: true
              Body
                Ftmlk
                Requires env: true
                  Args
                    z0 : int
                      Ref: true
                  Body
                    Ftmlk
                    Requires env: true
                      Args
                        y0 : int
                          Ref: false
                      Body
                        BinOp +
                          Left
                            BinOp +
                              Left
                                Var x0
                              Right
                                Var y0
                              Type: int
                          Right
                            Var z0
                          Type: int
          Is closure: false
          Is recursive: false
        LetStmt adc0
          type: (int)->((int)->(int))
          Expr
            FtmlkApp
            Type: (int)->((int)->(int))
              Func
                Var add_three_numbers0
              Args
                Num 1
          Is closure: false
          Is recursive: false
      Print
        FtmlkApp
        Type: int
          Func
            FtmlkApp
            Type: (int)->(int)
              Func
                Var adc0
              Args
                Num 8
          Args
            Num 9
    LetStmt add_leet_sixty0
      type: (int)->(int)
      Expr
        FtmlkApp
        Type: (int)->(int)
          Func
            FtmlkApp
            Type: (int)->((int)->(int))
              Func
                Var add_three_numbers0
              Args
                Num 1337
          Args
            Num 60
      Is closure: false
      Is recursive: false
  Print
    FtmlkApp
    Type: int
      Func
        Var add_leet_sixty0
      Args
        Num 100
