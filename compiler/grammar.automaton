State 0:
## Known stack suffix:
##
## LR(1) items:
program' -> . program [ # ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On LET shift to state 90
-- On IF shift to state 96
-- On ID shift to state 99
-- On BREAK shift to state 20
-- On stmt shift to state 105
-- On program shift to state 107
## Reductions:

State 1:
## Known stack suffix:
## WHILE
## LR(1) items:
stmt -> WHILE . expr LBRACE stmt RBRACE [ SEMICOLON RBRACE EOF ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On NUM shift to state 4
-- On LET shift to state 5
-- On IF shift to state 15
-- On ID shift to state 16
-- On FTMLK shift to state 18
-- On BREAK shift to state 20
-- On stmt shift to state 21
-- On expr shift to state 88
## Reductions:

State 2:
## Known stack suffix:
## PRINT
## LR(1) items:
stmt -> PRINT . LPAREN expr RPAREN [ SEMICOLON RBRACE EOF ]
## Transitions:
-- On LPAREN shift to state 3
## Reductions:

State 3:
## Known stack suffix:
## PRINT LPAREN
## LR(1) items:
stmt -> PRINT LPAREN . expr RPAREN [ SEMICOLON RBRACE EOF ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On NUM shift to state 4
-- On LET shift to state 5
-- On IF shift to state 15
-- On ID shift to state 16
-- On FTMLK shift to state 18
-- On BREAK shift to state 20
-- On stmt shift to state 21
-- On expr shift to state 86
## Reductions:

State 4:
## Known stack suffix:
## NUM
## LR(1) items:
expr -> NUM . [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
## Reductions:
-- On TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND
--   reduce production expr -> NUM

State 5:
## Known stack suffix:
## LET
## LR(1) items:
expr -> LET . ID COLON type_parse ASSIGN expr IN expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
stmt -> LET . ID COLON type_parse ASSIGN expr [ SEMICOLON ]
## Transitions:
-- On ID shift to state 6
## Reductions:

State 6:
## Known stack suffix:
## LET ID
## LR(1) items:
expr -> LET ID . COLON type_parse ASSIGN expr IN expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
stmt -> LET ID . COLON type_parse ASSIGN expr [ SEMICOLON ]
## Transitions:
-- On COLON shift to state 7
## Reductions:

State 7:
## Known stack suffix:
## LET ID COLON
## LR(1) items:
expr -> LET ID COLON . type_parse ASSIGN expr IN expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
stmt -> LET ID COLON . type_parse ASSIGN expr [ SEMICOLON ]
## Transitions:
-- On SHORT shift to state 8
-- On LONG shift to state 9
-- On INT shift to state 10
-- On CHAR shift to state 11
-- On BOOL shift to state 12
-- On type_parse shift to state 13
## Reductions:

State 8:
## Known stack suffix:
## SHORT
## LR(1) items:
type_parse -> SHORT . [ LBRACE ASSIGN ARROW ]
## Transitions:
## Reductions:
-- On LBRACE ASSIGN ARROW
--   reduce production type_parse -> SHORT

State 9:
## Known stack suffix:
## LONG
## LR(1) items:
type_parse -> LONG . [ LBRACE ASSIGN ARROW ]
## Transitions:
## Reductions:
-- On LBRACE ASSIGN ARROW
--   reduce production type_parse -> LONG

State 10:
## Known stack suffix:
## INT
## LR(1) items:
type_parse -> INT . [ LBRACE ASSIGN ARROW ]
## Transitions:
## Reductions:
-- On LBRACE ASSIGN ARROW
--   reduce production type_parse -> INT

State 11:
## Known stack suffix:
## CHAR
## LR(1) items:
type_parse -> CHAR . [ LBRACE ASSIGN ARROW ]
## Transitions:
## Reductions:
-- On LBRACE ASSIGN ARROW
--   reduce production type_parse -> CHAR

State 12:
## Known stack suffix:
## BOOL
## LR(1) items:
type_parse -> BOOL . [ LBRACE ASSIGN ARROW ]
## Transitions:
## Reductions:
-- On LBRACE ASSIGN ARROW
--   reduce production type_parse -> BOOL

State 13:
## Known stack suffix:
## LET ID COLON type_parse
## LR(1) items:
expr -> LET ID COLON type_parse . ASSIGN expr IN expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
stmt -> LET ID COLON type_parse . ASSIGN expr [ SEMICOLON ]
type_parse -> type_parse . ARROW type_parse [ ASSIGN ARROW ]
## Transitions:
-- On ASSIGN shift to state 14
-- On ARROW shift to state 74
## Reductions:

State 14:
## Known stack suffix:
## LET ID COLON type_parse ASSIGN
## LR(1) items:
expr -> LET ID COLON type_parse ASSIGN . expr IN expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
stmt -> LET ID COLON type_parse ASSIGN . expr [ SEMICOLON ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On NUM shift to state 4
-- On LET shift to state 5
-- On IF shift to state 15
-- On ID shift to state 16
-- On FTMLK shift to state 18
-- On BREAK shift to state 20
-- On stmt shift to state 21
-- On expr shift to state 83
## Reductions:

State 15:
## Known stack suffix:
## IF
## LR(1) items:
expr -> IF . expr THEN expr ELSE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
stmt -> IF . expr THEN stmt [ SEMICOLON ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On NUM shift to state 4
-- On LET shift to state 5
-- On IF shift to state 15
-- On ID shift to state 16
-- On FTMLK shift to state 18
-- On BREAK shift to state 20
-- On stmt shift to state 21
-- On expr shift to state 77
## Reductions:

State 16:
## Known stack suffix:
## ID
## LR(1) items:
expr -> ID . [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
stmt -> ID . ASSIGN expr [ SEMICOLON ]
## Transitions:
-- On ASSIGN shift to state 17
## Reductions:
-- On TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND
--   reduce production expr -> ID

State 17:
## Known stack suffix:
## ID ASSIGN
## LR(1) items:
stmt -> ID ASSIGN . expr [ SEMICOLON RBRACE EOF ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On NUM shift to state 4
-- On LET shift to state 5
-- On IF shift to state 15
-- On ID shift to state 16
-- On FTMLK shift to state 18
-- On BREAK shift to state 20
-- On stmt shift to state 21
-- On expr shift to state 76
## Reductions:

State 18:
## Known stack suffix:
## FTMLK
## LR(1) items:
expr -> FTMLK . LPAREN exprlist RPAREN COLON type_parse LBRACE expr RBRACE [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On LPAREN shift to state 19
## Reductions:

State 19:
## Known stack suffix:
## FTMLK LPAREN
## LR(1) items:
expr -> FTMLK LPAREN . exprlist RPAREN COLON type_parse LBRACE expr RBRACE [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On NUM shift to state 4
-- On LET shift to state 5
-- On IF shift to state 15
-- On ID shift to state 16
-- On FTMLK shift to state 18
-- On BREAK shift to state 20
-- On stmt shift to state 21
-- On exprlist shift to state 61
-- On expr shift to state 71
## Reductions:

State 20:
## Known stack suffix:
## BREAK
## LR(1) items:
stmt -> BREAK . [ SEMICOLON RBRACE EOF ]
## Transitions:
## Reductions:
-- On SEMICOLON RBRACE EOF
--   reduce production stmt -> BREAK

State 21:
## Known stack suffix:
## stmt
## LR(1) items:
expr -> stmt . SEMICOLON expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
stmt -> stmt . SEMICOLON stmt [ SEMICOLON ]
## Transitions:
-- On SEMICOLON shift to state 22
## Reductions:

State 22:
## Known stack suffix:
## stmt SEMICOLON
## LR(1) items:
expr -> stmt SEMICOLON . expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
stmt -> stmt SEMICOLON . stmt [ SEMICOLON ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On NUM shift to state 4
-- On LET shift to state 5
-- On IF shift to state 15
-- On ID shift to state 16
-- On FTMLK shift to state 18
-- On BREAK shift to state 20
-- On stmt shift to state 23
-- On expr shift to state 24
## Reductions:

State 23:
## Known stack suffix:
## stmt SEMICOLON stmt
## LR(1) items:
expr -> stmt . SEMICOLON expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
stmt -> stmt . SEMICOLON stmt [ SEMICOLON ]
stmt -> stmt SEMICOLON stmt . [ SEMICOLON ]
## Transitions:
## Reductions:
-- On SEMICOLON
--   reduce production stmt -> stmt SEMICOLON stmt

State 24:
## Known stack suffix:
## stmt SEMICOLON expr
## LR(1) items:
expr -> expr . LPAREN exprlist RPAREN [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . PLUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MINUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . TIMES expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . DIVIDE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MODULO expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . EQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . NEQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . AND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . OR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BAND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BXOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHL expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> stmt SEMICOLON expr . [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On TIMES shift to state 25
-- On SHR shift to state 27
-- On SHL shift to state 37
-- On PLUS shift to state 29
-- On OR shift to state 39
-- On NEQ shift to state 41
-- On MODULO shift to state 31
-- On MINUS shift to state 35
-- On LT shift to state 43
-- On LE shift to state 45
-- On GT shift to state 47
-- On GE shift to state 49
-- On EQ shift to state 51
-- On DIVIDE shift to state 33
-- On BXOR shift to state 53
-- On BOR shift to state 57
-- On BAND shift to state 55
-- On AND shift to state 59
## Reductions:
-- On THEN SEMICOLON RPAREN RBRACE LPAREN LBRACE IN EOF ELSE COMMA
--   reduce production expr -> stmt SEMICOLON expr

State 25:
## Known stack suffix:
## expr TIMES
## LR(1) items:
expr -> expr TIMES . expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On NUM shift to state 4
-- On LET shift to state 5
-- On IF shift to state 15
-- On ID shift to state 16
-- On FTMLK shift to state 18
-- On BREAK shift to state 20
-- On stmt shift to state 21
-- On expr shift to state 26
## Reductions:

State 26:
## Known stack suffix:
## expr TIMES expr
## LR(1) items:
expr -> expr . LPAREN exprlist RPAREN [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . PLUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MINUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . TIMES expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr TIMES expr . [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . DIVIDE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MODULO expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . EQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . NEQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . AND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . OR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BAND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BXOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHL expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
## Reductions:
-- On TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND
--   reduce production expr -> expr TIMES expr

State 27:
## Known stack suffix:
## expr SHR
## LR(1) items:
expr -> expr SHR . expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On NUM shift to state 4
-- On LET shift to state 5
-- On IF shift to state 15
-- On ID shift to state 16
-- On FTMLK shift to state 18
-- On BREAK shift to state 20
-- On stmt shift to state 21
-- On expr shift to state 28
## Reductions:

State 28:
## Known stack suffix:
## expr SHR expr
## LR(1) items:
expr -> expr . LPAREN exprlist RPAREN [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . PLUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MINUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . TIMES expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . DIVIDE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MODULO expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . EQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . NEQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . AND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . OR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BAND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BXOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHL expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr SHR expr . [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On TIMES shift to state 25
-- On PLUS shift to state 29
-- On MODULO shift to state 31
-- On MINUS shift to state 35
-- On DIVIDE shift to state 33
## Reductions:
-- On THEN SHR SHL SEMICOLON RPAREN RBRACE OR NEQ LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE COMMA BXOR BOR BAND AND
--   reduce production expr -> expr SHR expr

State 29:
## Known stack suffix:
## expr PLUS
## LR(1) items:
expr -> expr PLUS . expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On NUM shift to state 4
-- On LET shift to state 5
-- On IF shift to state 15
-- On ID shift to state 16
-- On FTMLK shift to state 18
-- On BREAK shift to state 20
-- On stmt shift to state 21
-- On expr shift to state 30
## Reductions:

State 30:
## Known stack suffix:
## expr PLUS expr
## LR(1) items:
expr -> expr . LPAREN exprlist RPAREN [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . PLUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr PLUS expr . [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MINUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . TIMES expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . DIVIDE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MODULO expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . EQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . NEQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . AND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . OR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BAND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BXOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHL expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On TIMES shift to state 25
-- On MODULO shift to state 31
-- On DIVIDE shift to state 33
## Reductions:
-- On THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE COMMA BXOR BOR BAND AND
--   reduce production expr -> expr PLUS expr

State 31:
## Known stack suffix:
## expr MODULO
## LR(1) items:
expr -> expr MODULO . expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On NUM shift to state 4
-- On LET shift to state 5
-- On IF shift to state 15
-- On ID shift to state 16
-- On FTMLK shift to state 18
-- On BREAK shift to state 20
-- On stmt shift to state 21
-- On expr shift to state 32
## Reductions:

State 32:
## Known stack suffix:
## expr MODULO expr
## LR(1) items:
expr -> expr . LPAREN exprlist RPAREN [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . PLUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MINUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . TIMES expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . DIVIDE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MODULO expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr MODULO expr . [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . EQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . NEQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . AND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . OR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BAND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BXOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHL expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
## Reductions:
-- On TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND
--   reduce production expr -> expr MODULO expr

State 33:
## Known stack suffix:
## expr DIVIDE
## LR(1) items:
expr -> expr DIVIDE . expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On NUM shift to state 4
-- On LET shift to state 5
-- On IF shift to state 15
-- On ID shift to state 16
-- On FTMLK shift to state 18
-- On BREAK shift to state 20
-- On stmt shift to state 21
-- On expr shift to state 34
## Reductions:

State 34:
## Known stack suffix:
## expr DIVIDE expr
## LR(1) items:
expr -> expr . LPAREN exprlist RPAREN [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . PLUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MINUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . TIMES expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . DIVIDE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr DIVIDE expr . [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MODULO expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . EQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . NEQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . AND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . OR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BAND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BXOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHL expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
## Reductions:
-- On TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND
--   reduce production expr -> expr DIVIDE expr

State 35:
## Known stack suffix:
## expr MINUS
## LR(1) items:
expr -> expr MINUS . expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On NUM shift to state 4
-- On LET shift to state 5
-- On IF shift to state 15
-- On ID shift to state 16
-- On FTMLK shift to state 18
-- On BREAK shift to state 20
-- On stmt shift to state 21
-- On expr shift to state 36
## Reductions:

State 36:
## Known stack suffix:
## expr MINUS expr
## LR(1) items:
expr -> expr . LPAREN exprlist RPAREN [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . PLUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MINUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr MINUS expr . [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . TIMES expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . DIVIDE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MODULO expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . EQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . NEQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . AND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . OR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BAND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BXOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHL expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On TIMES shift to state 25
-- On MODULO shift to state 31
-- On DIVIDE shift to state 33
## Reductions:
-- On THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE COMMA BXOR BOR BAND AND
--   reduce production expr -> expr MINUS expr

State 37:
## Known stack suffix:
## expr SHL
## LR(1) items:
expr -> expr SHL . expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On NUM shift to state 4
-- On LET shift to state 5
-- On IF shift to state 15
-- On ID shift to state 16
-- On FTMLK shift to state 18
-- On BREAK shift to state 20
-- On stmt shift to state 21
-- On expr shift to state 38
## Reductions:

State 38:
## Known stack suffix:
## expr SHL expr
## LR(1) items:
expr -> expr . LPAREN exprlist RPAREN [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . PLUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MINUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . TIMES expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . DIVIDE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MODULO expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . EQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . NEQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . AND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . OR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BAND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BXOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHL expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr SHL expr . [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On TIMES shift to state 25
-- On PLUS shift to state 29
-- On MODULO shift to state 31
-- On MINUS shift to state 35
-- On DIVIDE shift to state 33
## Reductions:
-- On THEN SHR SHL SEMICOLON RPAREN RBRACE OR NEQ LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE COMMA BXOR BOR BAND AND
--   reduce production expr -> expr SHL expr

State 39:
## Known stack suffix:
## expr OR
## LR(1) items:
expr -> expr OR . expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On NUM shift to state 4
-- On LET shift to state 5
-- On IF shift to state 15
-- On ID shift to state 16
-- On FTMLK shift to state 18
-- On BREAK shift to state 20
-- On stmt shift to state 21
-- On expr shift to state 40
## Reductions:

State 40:
## Known stack suffix:
## expr OR expr
## LR(1) items:
expr -> expr . LPAREN exprlist RPAREN [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . PLUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MINUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . TIMES expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . DIVIDE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MODULO expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . EQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . NEQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . AND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . OR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr OR expr . [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BAND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BXOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHL expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On TIMES shift to state 25
-- On SHR shift to state 27
-- On SHL shift to state 37
-- On PLUS shift to state 29
-- On NEQ shift to state 41
-- On MODULO shift to state 31
-- On MINUS shift to state 35
-- On LT shift to state 43
-- On LE shift to state 45
-- On GT shift to state 47
-- On GE shift to state 49
-- On EQ shift to state 51
-- On DIVIDE shift to state 33
-- On BXOR shift to state 53
-- On BOR shift to state 57
-- On BAND shift to state 55
-- On AND shift to state 59
## Reductions:
-- On THEN SEMICOLON RPAREN RBRACE OR LPAREN LBRACE IN EOF ELSE COMMA
--   reduce production expr -> expr OR expr

State 41:
## Known stack suffix:
## expr NEQ
## LR(1) items:
expr -> expr NEQ . expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On NUM shift to state 4
-- On LET shift to state 5
-- On IF shift to state 15
-- On ID shift to state 16
-- On FTMLK shift to state 18
-- On BREAK shift to state 20
-- On stmt shift to state 21
-- On expr shift to state 42
## Reductions:

State 42:
## Known stack suffix:
## expr NEQ expr
## LR(1) items:
expr -> expr . LPAREN exprlist RPAREN [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . PLUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MINUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . TIMES expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . DIVIDE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MODULO expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . EQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . NEQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr NEQ expr . [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . AND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . OR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BAND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BXOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHL expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On TIMES shift to state 25
-- On SHR shift to state 27
-- On SHL shift to state 37
-- On PLUS shift to state 29
-- On MODULO shift to state 31
-- On MINUS shift to state 35
-- On DIVIDE shift to state 33
## Reductions:
-- On THEN SEMICOLON RPAREN RBRACE OR LPAREN LBRACE IN EOF ELSE COMMA BXOR BOR BAND AND
--   reduce production expr -> expr NEQ expr

State 43:
## Known stack suffix:
## expr LT
## LR(1) items:
expr -> expr LT . expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On NUM shift to state 4
-- On LET shift to state 5
-- On IF shift to state 15
-- On ID shift to state 16
-- On FTMLK shift to state 18
-- On BREAK shift to state 20
-- On stmt shift to state 21
-- On expr shift to state 44
## Reductions:

State 44:
## Known stack suffix:
## expr LT expr
## LR(1) items:
expr -> expr . LPAREN exprlist RPAREN [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . PLUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MINUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . TIMES expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . DIVIDE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MODULO expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . EQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . NEQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr LT expr . [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . AND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . OR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BAND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BXOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHL expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On TIMES shift to state 25
-- On SHR shift to state 27
-- On SHL shift to state 37
-- On PLUS shift to state 29
-- On MODULO shift to state 31
-- On MINUS shift to state 35
-- On DIVIDE shift to state 33
## Reductions:
-- On THEN SEMICOLON RPAREN RBRACE OR LPAREN LBRACE IN EOF ELSE COMMA BXOR BOR BAND AND
--   reduce production expr -> expr LT expr

State 45:
## Known stack suffix:
## expr LE
## LR(1) items:
expr -> expr LE . expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On NUM shift to state 4
-- On LET shift to state 5
-- On IF shift to state 15
-- On ID shift to state 16
-- On FTMLK shift to state 18
-- On BREAK shift to state 20
-- On stmt shift to state 21
-- On expr shift to state 46
## Reductions:

State 46:
## Known stack suffix:
## expr LE expr
## LR(1) items:
expr -> expr . LPAREN exprlist RPAREN [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . PLUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MINUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . TIMES expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . DIVIDE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MODULO expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . EQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . NEQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr LE expr . [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . AND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . OR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BAND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BXOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHL expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On TIMES shift to state 25
-- On SHR shift to state 27
-- On SHL shift to state 37
-- On PLUS shift to state 29
-- On MODULO shift to state 31
-- On MINUS shift to state 35
-- On DIVIDE shift to state 33
## Reductions:
-- On THEN SEMICOLON RPAREN RBRACE OR LPAREN LBRACE IN EOF ELSE COMMA BXOR BOR BAND AND
--   reduce production expr -> expr LE expr

State 47:
## Known stack suffix:
## expr GT
## LR(1) items:
expr -> expr GT . expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On NUM shift to state 4
-- On LET shift to state 5
-- On IF shift to state 15
-- On ID shift to state 16
-- On FTMLK shift to state 18
-- On BREAK shift to state 20
-- On stmt shift to state 21
-- On expr shift to state 48
## Reductions:

State 48:
## Known stack suffix:
## expr GT expr
## LR(1) items:
expr -> expr . LPAREN exprlist RPAREN [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . PLUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MINUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . TIMES expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . DIVIDE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MODULO expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . EQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . NEQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr GT expr . [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . AND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . OR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BAND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BXOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHL expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On TIMES shift to state 25
-- On SHR shift to state 27
-- On SHL shift to state 37
-- On PLUS shift to state 29
-- On MODULO shift to state 31
-- On MINUS shift to state 35
-- On DIVIDE shift to state 33
## Reductions:
-- On THEN SEMICOLON RPAREN RBRACE OR LPAREN LBRACE IN EOF ELSE COMMA BXOR BOR BAND AND
--   reduce production expr -> expr GT expr

State 49:
## Known stack suffix:
## expr GE
## LR(1) items:
expr -> expr GE . expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On NUM shift to state 4
-- On LET shift to state 5
-- On IF shift to state 15
-- On ID shift to state 16
-- On FTMLK shift to state 18
-- On BREAK shift to state 20
-- On stmt shift to state 21
-- On expr shift to state 50
## Reductions:

State 50:
## Known stack suffix:
## expr GE expr
## LR(1) items:
expr -> expr . LPAREN exprlist RPAREN [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . PLUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MINUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . TIMES expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . DIVIDE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MODULO expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . EQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . NEQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr GE expr . [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . AND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . OR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BAND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BXOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHL expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On TIMES shift to state 25
-- On SHR shift to state 27
-- On SHL shift to state 37
-- On PLUS shift to state 29
-- On MODULO shift to state 31
-- On MINUS shift to state 35
-- On DIVIDE shift to state 33
## Reductions:
-- On THEN SEMICOLON RPAREN RBRACE OR LPAREN LBRACE IN EOF ELSE COMMA BXOR BOR BAND AND
--   reduce production expr -> expr GE expr

State 51:
## Known stack suffix:
## expr EQ
## LR(1) items:
expr -> expr EQ . expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On NUM shift to state 4
-- On LET shift to state 5
-- On IF shift to state 15
-- On ID shift to state 16
-- On FTMLK shift to state 18
-- On BREAK shift to state 20
-- On stmt shift to state 21
-- On expr shift to state 52
## Reductions:

State 52:
## Known stack suffix:
## expr EQ expr
## LR(1) items:
expr -> expr . LPAREN exprlist RPAREN [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . PLUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MINUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . TIMES expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . DIVIDE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MODULO expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . EQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr EQ expr . [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . NEQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . AND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . OR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BAND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BXOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHL expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On TIMES shift to state 25
-- On SHR shift to state 27
-- On SHL shift to state 37
-- On PLUS shift to state 29
-- On MODULO shift to state 31
-- On MINUS shift to state 35
-- On DIVIDE shift to state 33
## Reductions:
-- On THEN SEMICOLON RPAREN RBRACE OR LPAREN LBRACE IN EOF ELSE COMMA BXOR BOR BAND AND
--   reduce production expr -> expr EQ expr

State 53:
## Known stack suffix:
## expr BXOR
## LR(1) items:
expr -> expr BXOR . expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On NUM shift to state 4
-- On LET shift to state 5
-- On IF shift to state 15
-- On ID shift to state 16
-- On FTMLK shift to state 18
-- On BREAK shift to state 20
-- On stmt shift to state 21
-- On expr shift to state 54
## Reductions:

State 54:
## Known stack suffix:
## expr BXOR expr
## LR(1) items:
expr -> expr . LPAREN exprlist RPAREN [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . PLUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MINUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . TIMES expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . DIVIDE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MODULO expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . EQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . NEQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . AND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . OR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BAND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BXOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr BXOR expr . [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHL expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On TIMES shift to state 25
-- On SHR shift to state 27
-- On SHL shift to state 37
-- On PLUS shift to state 29
-- On NEQ shift to state 41
-- On MODULO shift to state 31
-- On MINUS shift to state 35
-- On LT shift to state 43
-- On LE shift to state 45
-- On GT shift to state 47
-- On GE shift to state 49
-- On EQ shift to state 51
-- On DIVIDE shift to state 33
-- On BAND shift to state 55
## Reductions:
-- On THEN SEMICOLON RPAREN RBRACE OR LPAREN LBRACE IN EOF ELSE COMMA BXOR BOR AND
--   reduce production expr -> expr BXOR expr

State 55:
## Known stack suffix:
## expr BAND
## LR(1) items:
expr -> expr BAND . expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On NUM shift to state 4
-- On LET shift to state 5
-- On IF shift to state 15
-- On ID shift to state 16
-- On FTMLK shift to state 18
-- On BREAK shift to state 20
-- On stmt shift to state 21
-- On expr shift to state 56
## Reductions:

State 56:
## Known stack suffix:
## expr BAND expr
## LR(1) items:
expr -> expr . LPAREN exprlist RPAREN [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . PLUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MINUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . TIMES expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . DIVIDE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MODULO expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . EQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . NEQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . AND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . OR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BAND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr BAND expr . [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BXOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHL expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On TIMES shift to state 25
-- On SHR shift to state 27
-- On SHL shift to state 37
-- On PLUS shift to state 29
-- On NEQ shift to state 41
-- On MODULO shift to state 31
-- On MINUS shift to state 35
-- On LT shift to state 43
-- On LE shift to state 45
-- On GT shift to state 47
-- On GE shift to state 49
-- On EQ shift to state 51
-- On DIVIDE shift to state 33
## Reductions:
-- On THEN SEMICOLON RPAREN RBRACE OR LPAREN LBRACE IN EOF ELSE COMMA BXOR BOR BAND AND
--   reduce production expr -> expr BAND expr

State 57:
## Known stack suffix:
## expr BOR
## LR(1) items:
expr -> expr BOR . expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On NUM shift to state 4
-- On LET shift to state 5
-- On IF shift to state 15
-- On ID shift to state 16
-- On FTMLK shift to state 18
-- On BREAK shift to state 20
-- On stmt shift to state 21
-- On expr shift to state 58
## Reductions:

State 58:
## Known stack suffix:
## expr BOR expr
## LR(1) items:
expr -> expr . LPAREN exprlist RPAREN [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . PLUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MINUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . TIMES expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . DIVIDE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MODULO expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . EQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . NEQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . AND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . OR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr BOR expr . [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BAND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BXOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHL expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On TIMES shift to state 25
-- On SHR shift to state 27
-- On SHL shift to state 37
-- On PLUS shift to state 29
-- On NEQ shift to state 41
-- On MODULO shift to state 31
-- On MINUS shift to state 35
-- On LT shift to state 43
-- On LE shift to state 45
-- On GT shift to state 47
-- On GE shift to state 49
-- On EQ shift to state 51
-- On DIVIDE shift to state 33
-- On BXOR shift to state 53
-- On BAND shift to state 55
## Reductions:
-- On THEN SEMICOLON RPAREN RBRACE OR LPAREN LBRACE IN EOF ELSE COMMA BOR AND
--   reduce production expr -> expr BOR expr

State 59:
## Known stack suffix:
## expr AND
## LR(1) items:
expr -> expr AND . expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On NUM shift to state 4
-- On LET shift to state 5
-- On IF shift to state 15
-- On ID shift to state 16
-- On FTMLK shift to state 18
-- On BREAK shift to state 20
-- On stmt shift to state 21
-- On expr shift to state 60
## Reductions:

State 60:
## Known stack suffix:
## expr AND expr
## LR(1) items:
expr -> expr . LPAREN exprlist RPAREN [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . PLUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MINUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . TIMES expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . DIVIDE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MODULO expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . EQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . NEQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . AND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr AND expr . [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . OR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BAND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BXOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHL expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On TIMES shift to state 25
-- On SHR shift to state 27
-- On SHL shift to state 37
-- On PLUS shift to state 29
-- On NEQ shift to state 41
-- On MODULO shift to state 31
-- On MINUS shift to state 35
-- On LT shift to state 43
-- On LE shift to state 45
-- On GT shift to state 47
-- On GE shift to state 49
-- On EQ shift to state 51
-- On DIVIDE shift to state 33
-- On BXOR shift to state 53
-- On BOR shift to state 57
-- On BAND shift to state 55
## Reductions:
-- On THEN SEMICOLON RPAREN RBRACE OR LPAREN LBRACE IN EOF ELSE COMMA AND
--   reduce production expr -> expr AND expr

State 61:
## Known stack suffix:
## FTMLK LPAREN exprlist
## LR(1) items:
expr -> FTMLK LPAREN exprlist . RPAREN COLON type_parse LBRACE expr RBRACE [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On RPAREN shift to state 62
## Reductions:

State 62:
## Known stack suffix:
## FTMLK LPAREN exprlist RPAREN
## LR(1) items:
expr -> FTMLK LPAREN exprlist RPAREN . COLON type_parse LBRACE expr RBRACE [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On COLON shift to state 63
## Reductions:

State 63:
## Known stack suffix:
## FTMLK LPAREN exprlist RPAREN COLON
## LR(1) items:
expr -> FTMLK LPAREN exprlist RPAREN COLON . type_parse LBRACE expr RBRACE [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On SHORT shift to state 8
-- On LONG shift to state 9
-- On INT shift to state 10
-- On CHAR shift to state 11
-- On BOOL shift to state 12
-- On type_parse shift to state 64
## Reductions:

State 64:
## Known stack suffix:
## FTMLK LPAREN exprlist RPAREN COLON type_parse
## LR(1) items:
expr -> FTMLK LPAREN exprlist RPAREN COLON type_parse . LBRACE expr RBRACE [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
type_parse -> type_parse . ARROW type_parse [ LBRACE ARROW ]
## Transitions:
-- On LBRACE shift to state 65
-- On ARROW shift to state 74
## Reductions:

State 65:
## Known stack suffix:
## FTMLK LPAREN exprlist RPAREN COLON type_parse LBRACE
## LR(1) items:
expr -> FTMLK LPAREN exprlist RPAREN COLON type_parse LBRACE . expr RBRACE [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On NUM shift to state 4
-- On LET shift to state 5
-- On IF shift to state 15
-- On ID shift to state 16
-- On FTMLK shift to state 18
-- On BREAK shift to state 20
-- On stmt shift to state 21
-- On expr shift to state 66
## Reductions:

State 66:
## Known stack suffix:
## FTMLK LPAREN exprlist RPAREN COLON type_parse LBRACE expr
## LR(1) items:
expr -> expr . LPAREN exprlist RPAREN [ TIMES SHR SHL RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . PLUS expr [ TIMES SHR SHL RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . MINUS expr [ TIMES SHR SHL RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . TIMES expr [ TIMES SHR SHL RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . DIVIDE expr [ TIMES SHR SHL RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . MODULO expr [ TIMES SHR SHL RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . EQ expr [ TIMES SHR SHL RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . NEQ expr [ TIMES SHR SHL RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . LT expr [ TIMES SHR SHL RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . LE expr [ TIMES SHR SHL RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . GT expr [ TIMES SHR SHL RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . GE expr [ TIMES SHR SHL RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . AND expr [ TIMES SHR SHL RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . OR expr [ TIMES SHR SHL RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . BOR expr [ TIMES SHR SHL RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . BAND expr [ TIMES SHR SHL RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . BXOR expr [ TIMES SHR SHL RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . SHL expr [ TIMES SHR SHL RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . SHR expr [ TIMES SHR SHL RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> FTMLK LPAREN exprlist RPAREN COLON type_parse LBRACE expr . RBRACE [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On TIMES shift to state 25
-- On SHR shift to state 27
-- On SHL shift to state 37
-- On RBRACE shift to state 67
-- On PLUS shift to state 29
-- On OR shift to state 39
-- On NEQ shift to state 41
-- On MODULO shift to state 31
-- On MINUS shift to state 35
-- On LT shift to state 43
-- On LPAREN shift to state 68
-- On LE shift to state 45
-- On GT shift to state 47
-- On GE shift to state 49
-- On EQ shift to state 51
-- On DIVIDE shift to state 33
-- On BXOR shift to state 53
-- On BOR shift to state 57
-- On BAND shift to state 55
-- On AND shift to state 59
## Reductions:

State 67:
## Known stack suffix:
## FTMLK LPAREN exprlist RPAREN COLON type_parse LBRACE expr RBRACE
## LR(1) items:
expr -> FTMLK LPAREN exprlist RPAREN COLON type_parse LBRACE expr RBRACE . [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
## Reductions:
-- On TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND
--   reduce production expr -> FTMLK LPAREN exprlist RPAREN COLON type_parse LBRACE expr RBRACE

State 68:
## Known stack suffix:
## expr LPAREN
## LR(1) items:
expr -> expr LPAREN . exprlist RPAREN [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On NUM shift to state 4
-- On LET shift to state 5
-- On IF shift to state 15
-- On ID shift to state 16
-- On FTMLK shift to state 18
-- On BREAK shift to state 20
-- On stmt shift to state 21
-- On exprlist shift to state 69
-- On expr shift to state 71
## Reductions:

State 69:
## Known stack suffix:
## expr LPAREN exprlist
## LR(1) items:
expr -> expr LPAREN exprlist . RPAREN [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On RPAREN shift to state 70
## Reductions:

State 70:
## Known stack suffix:
## expr LPAREN exprlist RPAREN
## LR(1) items:
expr -> expr LPAREN exprlist RPAREN . [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
## Reductions:
-- On TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND
--   reduce production expr -> expr LPAREN exprlist RPAREN

State 71:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . LPAREN exprlist RPAREN [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . PLUS expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MINUS expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . TIMES expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . DIVIDE expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MODULO expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . EQ expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . NEQ expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LT expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LE expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GT expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GE expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . AND expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . OR expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BOR expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BAND expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BXOR expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHL expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHR expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE COMMA BXOR BOR BAND AND ]
exprlist -> expr . [ RPAREN ]
exprlist -> expr . COMMA exprlist [ RPAREN ]
## Transitions:
-- On TIMES shift to state 25
-- On SHR shift to state 27
-- On SHL shift to state 37
-- On PLUS shift to state 29
-- On OR shift to state 39
-- On NEQ shift to state 41
-- On MODULO shift to state 31
-- On MINUS shift to state 35
-- On LT shift to state 43
-- On LPAREN shift to state 68
-- On LE shift to state 45
-- On GT shift to state 47
-- On GE shift to state 49
-- On EQ shift to state 51
-- On DIVIDE shift to state 33
-- On COMMA shift to state 72
-- On BXOR shift to state 53
-- On BOR shift to state 57
-- On BAND shift to state 55
-- On AND shift to state 59
## Reductions:
-- On RPAREN
--   reduce production exprlist -> expr

State 72:
## Known stack suffix:
## expr COMMA
## LR(1) items:
exprlist -> expr COMMA . exprlist [ RPAREN ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On NUM shift to state 4
-- On LET shift to state 5
-- On IF shift to state 15
-- On ID shift to state 16
-- On FTMLK shift to state 18
-- On BREAK shift to state 20
-- On stmt shift to state 21
-- On exprlist shift to state 73
-- On expr shift to state 71
## Reductions:

State 73:
## Known stack suffix:
## expr COMMA exprlist
## LR(1) items:
exprlist -> expr COMMA exprlist . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production exprlist -> expr COMMA exprlist

State 74:
## Known stack suffix:
## type_parse ARROW
## LR(1) items:
type_parse -> type_parse ARROW . type_parse [ LBRACE ASSIGN ARROW ]
## Transitions:
-- On SHORT shift to state 8
-- On LONG shift to state 9
-- On INT shift to state 10
-- On CHAR shift to state 11
-- On BOOL shift to state 12
-- On type_parse shift to state 75
## Reductions:

State 75:
## Known stack suffix:
## type_parse ARROW type_parse
## LR(1) items:
type_parse -> type_parse . ARROW type_parse [ LBRACE ASSIGN ARROW ]
type_parse -> type_parse ARROW type_parse . [ LBRACE ASSIGN ARROW ]
## Transitions:
-- On ARROW shift to state 74
## Reductions:
-- On LBRACE ASSIGN
--   reduce production type_parse -> type_parse ARROW type_parse

State 76:
## Known stack suffix:
## ID ASSIGN expr
## LR(1) items:
expr -> expr . LPAREN exprlist RPAREN [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . PLUS expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . MINUS expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . TIMES expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . DIVIDE expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . MODULO expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . EQ expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . NEQ expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . LT expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . LE expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . GT expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . GE expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . AND expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . OR expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . BOR expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . BAND expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . BXOR expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . SHL expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . SHR expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
stmt -> ID ASSIGN expr . [ SEMICOLON RBRACE EOF ]
## Transitions:
-- On TIMES shift to state 25
-- On SHR shift to state 27
-- On SHL shift to state 37
-- On PLUS shift to state 29
-- On OR shift to state 39
-- On NEQ shift to state 41
-- On MODULO shift to state 31
-- On MINUS shift to state 35
-- On LT shift to state 43
-- On LPAREN shift to state 68
-- On LE shift to state 45
-- On GT shift to state 47
-- On GE shift to state 49
-- On EQ shift to state 51
-- On DIVIDE shift to state 33
-- On BXOR shift to state 53
-- On BOR shift to state 57
-- On BAND shift to state 55
-- On AND shift to state 59
## Reductions:
-- On SEMICOLON RBRACE EOF
--   reduce production stmt -> ID ASSIGN expr

State 77:
## Known stack suffix:
## IF expr
## LR(1) items:
expr -> expr . LPAREN exprlist RPAREN [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> IF expr . THEN expr ELSE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . PLUS expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . MINUS expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . TIMES expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . DIVIDE expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . MODULO expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . EQ expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . NEQ expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . LT expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . LE expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . GT expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . GE expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . AND expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . OR expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . BOR expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . BAND expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . BXOR expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . SHL expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . SHR expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
stmt -> IF expr . THEN stmt [ SEMICOLON ]
## Transitions:
-- On TIMES shift to state 25
-- On THEN shift to state 78
-- On SHR shift to state 27
-- On SHL shift to state 37
-- On PLUS shift to state 29
-- On OR shift to state 39
-- On NEQ shift to state 41
-- On MODULO shift to state 31
-- On MINUS shift to state 35
-- On LT shift to state 43
-- On LPAREN shift to state 68
-- On LE shift to state 45
-- On GT shift to state 47
-- On GE shift to state 49
-- On EQ shift to state 51
-- On DIVIDE shift to state 33
-- On BXOR shift to state 53
-- On BOR shift to state 57
-- On BAND shift to state 55
-- On AND shift to state 59
## Reductions:

State 78:
## Known stack suffix:
## IF expr THEN
## LR(1) items:
expr -> IF expr THEN . expr ELSE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
stmt -> IF expr THEN . stmt [ SEMICOLON ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On NUM shift to state 4
-- On LET shift to state 5
-- On IF shift to state 15
-- On ID shift to state 16
-- On FTMLK shift to state 18
-- On BREAK shift to state 20
-- On stmt shift to state 79
-- On expr shift to state 80
## Reductions:

State 79:
## Known stack suffix:
## IF expr THEN stmt
## LR(1) items:
expr -> stmt . SEMICOLON expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ ELSE DIVIDE BXOR BOR BAND AND ]
stmt -> stmt . SEMICOLON stmt [ SEMICOLON ]
stmt -> IF expr THEN stmt . [ SEMICOLON ]
## Transitions:
-- On SEMICOLON shift to state 22
## Reductions:

State 80:
## Known stack suffix:
## IF expr THEN expr
## LR(1) items:
expr -> expr . LPAREN exprlist RPAREN [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ ELSE DIVIDE BXOR BOR BAND AND ]
expr -> IF expr THEN expr . ELSE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . PLUS expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ ELSE DIVIDE BXOR BOR BAND AND ]
expr -> expr . MINUS expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ ELSE DIVIDE BXOR BOR BAND AND ]
expr -> expr . TIMES expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ ELSE DIVIDE BXOR BOR BAND AND ]
expr -> expr . DIVIDE expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ ELSE DIVIDE BXOR BOR BAND AND ]
expr -> expr . MODULO expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ ELSE DIVIDE BXOR BOR BAND AND ]
expr -> expr . EQ expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ ELSE DIVIDE BXOR BOR BAND AND ]
expr -> expr . NEQ expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ ELSE DIVIDE BXOR BOR BAND AND ]
expr -> expr . LT expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ ELSE DIVIDE BXOR BOR BAND AND ]
expr -> expr . LE expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ ELSE DIVIDE BXOR BOR BAND AND ]
expr -> expr . GT expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ ELSE DIVIDE BXOR BOR BAND AND ]
expr -> expr . GE expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ ELSE DIVIDE BXOR BOR BAND AND ]
expr -> expr . AND expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ ELSE DIVIDE BXOR BOR BAND AND ]
expr -> expr . OR expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ ELSE DIVIDE BXOR BOR BAND AND ]
expr -> expr . BOR expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ ELSE DIVIDE BXOR BOR BAND AND ]
expr -> expr . BAND expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ ELSE DIVIDE BXOR BOR BAND AND ]
expr -> expr . BXOR expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ ELSE DIVIDE BXOR BOR BAND AND ]
expr -> expr . SHL expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ ELSE DIVIDE BXOR BOR BAND AND ]
expr -> expr . SHR expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ ELSE DIVIDE BXOR BOR BAND AND ]
## Transitions:
-- On TIMES shift to state 25
-- On SHR shift to state 27
-- On SHL shift to state 37
-- On PLUS shift to state 29
-- On OR shift to state 39
-- On NEQ shift to state 41
-- On MODULO shift to state 31
-- On MINUS shift to state 35
-- On LT shift to state 43
-- On LPAREN shift to state 68
-- On LE shift to state 45
-- On GT shift to state 47
-- On GE shift to state 49
-- On EQ shift to state 51
-- On ELSE shift to state 81
-- On DIVIDE shift to state 33
-- On BXOR shift to state 53
-- On BOR shift to state 57
-- On BAND shift to state 55
-- On AND shift to state 59
## Reductions:

State 81:
## Known stack suffix:
## IF expr THEN expr ELSE
## LR(1) items:
expr -> IF expr THEN expr ELSE . expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On NUM shift to state 4
-- On LET shift to state 5
-- On IF shift to state 15
-- On ID shift to state 16
-- On FTMLK shift to state 18
-- On BREAK shift to state 20
-- On stmt shift to state 21
-- On expr shift to state 82
## Reductions:

State 82:
## Known stack suffix:
## IF expr THEN expr ELSE expr
## LR(1) items:
expr -> expr . LPAREN exprlist RPAREN [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> IF expr THEN expr ELSE expr . [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . PLUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MINUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . TIMES expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . DIVIDE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MODULO expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . EQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . NEQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . AND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . OR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BAND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BXOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHL expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On TIMES shift to state 25
-- On SHR shift to state 27
-- On SHL shift to state 37
-- On PLUS shift to state 29
-- On OR shift to state 39
-- On NEQ shift to state 41
-- On MODULO shift to state 31
-- On MINUS shift to state 35
-- On LT shift to state 43
-- On LPAREN shift to state 68
-- On LE shift to state 45
-- On GT shift to state 47
-- On GE shift to state 49
-- On EQ shift to state 51
-- On DIVIDE shift to state 33
-- On BXOR shift to state 53
-- On BOR shift to state 57
-- On BAND shift to state 55
-- On AND shift to state 59
## Reductions:
-- On THEN SEMICOLON RPAREN RBRACE LBRACE IN EOF ELSE COMMA
--   reduce production expr -> IF expr THEN expr ELSE expr

State 83:
## Known stack suffix:
## LET ID COLON type_parse ASSIGN expr
## LR(1) items:
expr -> expr . LPAREN exprlist RPAREN [ TIMES SHR SHL SEMICOLON PLUS OR NEQ MODULO MINUS LT LPAREN LE IN GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> LET ID COLON type_parse ASSIGN expr . IN expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . PLUS expr [ TIMES SHR SHL SEMICOLON PLUS OR NEQ MODULO MINUS LT LPAREN LE IN GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . MINUS expr [ TIMES SHR SHL SEMICOLON PLUS OR NEQ MODULO MINUS LT LPAREN LE IN GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . TIMES expr [ TIMES SHR SHL SEMICOLON PLUS OR NEQ MODULO MINUS LT LPAREN LE IN GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . DIVIDE expr [ TIMES SHR SHL SEMICOLON PLUS OR NEQ MODULO MINUS LT LPAREN LE IN GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . MODULO expr [ TIMES SHR SHL SEMICOLON PLUS OR NEQ MODULO MINUS LT LPAREN LE IN GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . EQ expr [ TIMES SHR SHL SEMICOLON PLUS OR NEQ MODULO MINUS LT LPAREN LE IN GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . NEQ expr [ TIMES SHR SHL SEMICOLON PLUS OR NEQ MODULO MINUS LT LPAREN LE IN GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . LT expr [ TIMES SHR SHL SEMICOLON PLUS OR NEQ MODULO MINUS LT LPAREN LE IN GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . LE expr [ TIMES SHR SHL SEMICOLON PLUS OR NEQ MODULO MINUS LT LPAREN LE IN GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . GT expr [ TIMES SHR SHL SEMICOLON PLUS OR NEQ MODULO MINUS LT LPAREN LE IN GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . GE expr [ TIMES SHR SHL SEMICOLON PLUS OR NEQ MODULO MINUS LT LPAREN LE IN GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . AND expr [ TIMES SHR SHL SEMICOLON PLUS OR NEQ MODULO MINUS LT LPAREN LE IN GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . OR expr [ TIMES SHR SHL SEMICOLON PLUS OR NEQ MODULO MINUS LT LPAREN LE IN GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . BOR expr [ TIMES SHR SHL SEMICOLON PLUS OR NEQ MODULO MINUS LT LPAREN LE IN GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . BAND expr [ TIMES SHR SHL SEMICOLON PLUS OR NEQ MODULO MINUS LT LPAREN LE IN GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . BXOR expr [ TIMES SHR SHL SEMICOLON PLUS OR NEQ MODULO MINUS LT LPAREN LE IN GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . SHL expr [ TIMES SHR SHL SEMICOLON PLUS OR NEQ MODULO MINUS LT LPAREN LE IN GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . SHR expr [ TIMES SHR SHL SEMICOLON PLUS OR NEQ MODULO MINUS LT LPAREN LE IN GT GE EQ DIVIDE BXOR BOR BAND AND ]
stmt -> LET ID COLON type_parse ASSIGN expr . [ SEMICOLON ]
## Transitions:
-- On TIMES shift to state 25
-- On SHR shift to state 27
-- On SHL shift to state 37
-- On PLUS shift to state 29
-- On OR shift to state 39
-- On NEQ shift to state 41
-- On MODULO shift to state 31
-- On MINUS shift to state 35
-- On LT shift to state 43
-- On LPAREN shift to state 68
-- On LE shift to state 45
-- On IN shift to state 84
-- On GT shift to state 47
-- On GE shift to state 49
-- On EQ shift to state 51
-- On DIVIDE shift to state 33
-- On BXOR shift to state 53
-- On BOR shift to state 57
-- On BAND shift to state 55
-- On AND shift to state 59
## Reductions:
-- On SEMICOLON
--   reduce production stmt -> LET ID COLON type_parse ASSIGN expr

State 84:
## Known stack suffix:
## LET ID COLON type_parse ASSIGN expr IN
## LR(1) items:
expr -> LET ID COLON type_parse ASSIGN expr IN . expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On NUM shift to state 4
-- On LET shift to state 5
-- On IF shift to state 15
-- On ID shift to state 16
-- On FTMLK shift to state 18
-- On BREAK shift to state 20
-- On stmt shift to state 21
-- On expr shift to state 85
## Reductions:

State 85:
## Known stack suffix:
## LET ID COLON type_parse ASSIGN expr IN expr
## LR(1) items:
expr -> expr . LPAREN exprlist RPAREN [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> LET ID COLON type_parse ASSIGN expr IN expr . [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . PLUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MINUS expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . TIMES expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . DIVIDE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . MODULO expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . EQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . NEQ expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . LE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GT expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . GE expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . AND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . OR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BAND expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . BXOR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHL expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
expr -> expr . SHR expr [ TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND ]
## Transitions:
-- On TIMES shift to state 25
-- On SHR shift to state 27
-- On SHL shift to state 37
-- On PLUS shift to state 29
-- On OR shift to state 39
-- On NEQ shift to state 41
-- On MODULO shift to state 31
-- On MINUS shift to state 35
-- On LT shift to state 43
-- On LPAREN shift to state 68
-- On LE shift to state 45
-- On GT shift to state 47
-- On GE shift to state 49
-- On EQ shift to state 51
-- On DIVIDE shift to state 33
-- On BXOR shift to state 53
-- On BOR shift to state 57
-- On BAND shift to state 55
-- On AND shift to state 59
## Reductions:
-- On TIMES THEN SHR SHL SEMICOLON RPAREN RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE IN GT GE EQ EOF ELSE DIVIDE COMMA BXOR BOR BAND AND
--   reduce production expr -> LET ID COLON type_parse ASSIGN expr IN expr
** Conflict on TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND

State 86:
## Known stack suffix:
## PRINT LPAREN expr
## LR(1) items:
expr -> expr . LPAREN exprlist RPAREN [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . PLUS expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . MINUS expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . TIMES expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . DIVIDE expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . MODULO expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . EQ expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . NEQ expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . LT expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . LE expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . GT expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . GE expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . AND expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . OR expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . BOR expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . BAND expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . BXOR expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . SHL expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . SHR expr [ TIMES SHR SHL RPAREN PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
stmt -> PRINT LPAREN expr . RPAREN [ SEMICOLON RBRACE EOF ]
## Transitions:
-- On TIMES shift to state 25
-- On SHR shift to state 27
-- On SHL shift to state 37
-- On RPAREN shift to state 87
-- On PLUS shift to state 29
-- On OR shift to state 39
-- On NEQ shift to state 41
-- On MODULO shift to state 31
-- On MINUS shift to state 35
-- On LT shift to state 43
-- On LPAREN shift to state 68
-- On LE shift to state 45
-- On GT shift to state 47
-- On GE shift to state 49
-- On EQ shift to state 51
-- On DIVIDE shift to state 33
-- On BXOR shift to state 53
-- On BOR shift to state 57
-- On BAND shift to state 55
-- On AND shift to state 59
## Reductions:

State 87:
## Known stack suffix:
## PRINT LPAREN expr RPAREN
## LR(1) items:
stmt -> PRINT LPAREN expr RPAREN . [ SEMICOLON RBRACE EOF ]
## Transitions:
## Reductions:
-- On SEMICOLON RBRACE EOF
--   reduce production stmt -> PRINT LPAREN expr RPAREN

State 88:
## Known stack suffix:
## WHILE expr
## LR(1) items:
expr -> expr . LPAREN exprlist RPAREN [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . PLUS expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . MINUS expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . TIMES expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . DIVIDE expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . MODULO expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . EQ expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . NEQ expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . LT expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . LE expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . GT expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . GE expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . AND expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . OR expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . BOR expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . BAND expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . BXOR expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . SHL expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . SHR expr [ TIMES SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE LBRACE GT GE EQ DIVIDE BXOR BOR BAND AND ]
stmt -> WHILE expr . LBRACE stmt RBRACE [ SEMICOLON RBRACE EOF ]
## Transitions:
-- On TIMES shift to state 25
-- On SHR shift to state 27
-- On SHL shift to state 37
-- On PLUS shift to state 29
-- On OR shift to state 39
-- On NEQ shift to state 41
-- On MODULO shift to state 31
-- On MINUS shift to state 35
-- On LT shift to state 43
-- On LPAREN shift to state 68
-- On LE shift to state 45
-- On LBRACE shift to state 89
-- On GT shift to state 47
-- On GE shift to state 49
-- On EQ shift to state 51
-- On DIVIDE shift to state 33
-- On BXOR shift to state 53
-- On BOR shift to state 57
-- On BAND shift to state 55
-- On AND shift to state 59
## Reductions:

State 89:
## Known stack suffix:
## WHILE expr LBRACE
## LR(1) items:
stmt -> WHILE expr LBRACE . stmt RBRACE [ SEMICOLON RBRACE EOF ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On LET shift to state 90
-- On IF shift to state 96
-- On ID shift to state 99
-- On BREAK shift to state 20
-- On stmt shift to state 103
## Reductions:

State 90:
## Known stack suffix:
## LET
## LR(1) items:
stmt -> LET . ID COLON type_parse ASSIGN expr [ SEMICOLON RBRACE EOF ]
## Transitions:
-- On ID shift to state 91
## Reductions:

State 91:
## Known stack suffix:
## LET ID
## LR(1) items:
stmt -> LET ID . COLON type_parse ASSIGN expr [ SEMICOLON RBRACE EOF ]
## Transitions:
-- On COLON shift to state 92
## Reductions:

State 92:
## Known stack suffix:
## LET ID COLON
## LR(1) items:
stmt -> LET ID COLON . type_parse ASSIGN expr [ SEMICOLON RBRACE EOF ]
## Transitions:
-- On SHORT shift to state 8
-- On LONG shift to state 9
-- On INT shift to state 10
-- On CHAR shift to state 11
-- On BOOL shift to state 12
-- On type_parse shift to state 93
## Reductions:

State 93:
## Known stack suffix:
## LET ID COLON type_parse
## LR(1) items:
stmt -> LET ID COLON type_parse . ASSIGN expr [ SEMICOLON RBRACE EOF ]
type_parse -> type_parse . ARROW type_parse [ ASSIGN ARROW ]
## Transitions:
-- On ASSIGN shift to state 94
-- On ARROW shift to state 74
## Reductions:

State 94:
## Known stack suffix:
## LET ID COLON type_parse ASSIGN
## LR(1) items:
stmt -> LET ID COLON type_parse ASSIGN . expr [ SEMICOLON RBRACE EOF ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On NUM shift to state 4
-- On LET shift to state 5
-- On IF shift to state 15
-- On ID shift to state 16
-- On FTMLK shift to state 18
-- On BREAK shift to state 20
-- On stmt shift to state 21
-- On expr shift to state 95
## Reductions:

State 95:
## Known stack suffix:
## LET ID COLON type_parse ASSIGN expr
## LR(1) items:
expr -> expr . LPAREN exprlist RPAREN [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . PLUS expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . MINUS expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . TIMES expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . DIVIDE expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . MODULO expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . EQ expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . NEQ expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . LT expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . LE expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . GT expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . GE expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . AND expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . OR expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . BOR expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . BAND expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . BXOR expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . SHL expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
expr -> expr . SHR expr [ TIMES SHR SHL SEMICOLON RBRACE PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ EOF DIVIDE BXOR BOR BAND AND ]
stmt -> LET ID COLON type_parse ASSIGN expr . [ SEMICOLON RBRACE EOF ]
## Transitions:
-- On TIMES shift to state 25
-- On SHR shift to state 27
-- On SHL shift to state 37
-- On PLUS shift to state 29
-- On OR shift to state 39
-- On NEQ shift to state 41
-- On MODULO shift to state 31
-- On MINUS shift to state 35
-- On LT shift to state 43
-- On LPAREN shift to state 68
-- On LE shift to state 45
-- On GT shift to state 47
-- On GE shift to state 49
-- On EQ shift to state 51
-- On DIVIDE shift to state 33
-- On BXOR shift to state 53
-- On BOR shift to state 57
-- On BAND shift to state 55
-- On AND shift to state 59
## Reductions:
-- On SEMICOLON RBRACE EOF
--   reduce production stmt -> LET ID COLON type_parse ASSIGN expr

State 96:
## Known stack suffix:
## IF
## LR(1) items:
stmt -> IF . expr THEN stmt [ SEMICOLON RBRACE EOF ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On NUM shift to state 4
-- On LET shift to state 5
-- On IF shift to state 15
-- On ID shift to state 16
-- On FTMLK shift to state 18
-- On BREAK shift to state 20
-- On stmt shift to state 21
-- On expr shift to state 97
## Reductions:

State 97:
## Known stack suffix:
## IF expr
## LR(1) items:
expr -> expr . LPAREN exprlist RPAREN [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . PLUS expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . MINUS expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . TIMES expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . DIVIDE expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . MODULO expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . EQ expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . NEQ expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . LT expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . LE expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . GT expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . GE expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . AND expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . OR expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . BOR expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . BAND expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . BXOR expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . SHL expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
expr -> expr . SHR expr [ TIMES THEN SHR SHL PLUS OR NEQ MODULO MINUS LT LPAREN LE GT GE EQ DIVIDE BXOR BOR BAND AND ]
stmt -> IF expr . THEN stmt [ SEMICOLON RBRACE EOF ]
## Transitions:
-- On TIMES shift to state 25
-- On THEN shift to state 98
-- On SHR shift to state 27
-- On SHL shift to state 37
-- On PLUS shift to state 29
-- On OR shift to state 39
-- On NEQ shift to state 41
-- On MODULO shift to state 31
-- On MINUS shift to state 35
-- On LT shift to state 43
-- On LPAREN shift to state 68
-- On LE shift to state 45
-- On GT shift to state 47
-- On GE shift to state 49
-- On EQ shift to state 51
-- On DIVIDE shift to state 33
-- On BXOR shift to state 53
-- On BOR shift to state 57
-- On BAND shift to state 55
-- On AND shift to state 59
## Reductions:

State 98:
## Known stack suffix:
## IF expr THEN
## LR(1) items:
stmt -> IF expr THEN . stmt [ SEMICOLON RBRACE EOF ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On LET shift to state 90
-- On IF shift to state 96
-- On ID shift to state 99
-- On BREAK shift to state 20
-- On stmt shift to state 100
## Reductions:

State 99:
## Known stack suffix:
## ID
## LR(1) items:
stmt -> ID . ASSIGN expr [ SEMICOLON RBRACE EOF ]
## Transitions:
-- On ASSIGN shift to state 17
## Reductions:

State 100:
## Known stack suffix:
## IF expr THEN stmt
## LR(1) items:
stmt -> stmt . SEMICOLON stmt [ SEMICOLON RBRACE EOF ]
stmt -> IF expr THEN stmt . [ SEMICOLON RBRACE EOF ]
## Transitions:
-- On SEMICOLON shift to state 101
## Reductions:
-- On RBRACE EOF
--   reduce production stmt -> IF expr THEN stmt

State 101:
## Known stack suffix:
## stmt SEMICOLON
## LR(1) items:
stmt -> stmt SEMICOLON . stmt [ SEMICOLON RBRACE EOF ]
## Transitions:
-- On WHILE shift to state 1
-- On PRINT shift to state 2
-- On LET shift to state 90
-- On IF shift to state 96
-- On ID shift to state 99
-- On BREAK shift to state 20
-- On stmt shift to state 102
## Reductions:

State 102:
## Known stack suffix:
## stmt SEMICOLON stmt
## LR(1) items:
stmt -> stmt . SEMICOLON stmt [ SEMICOLON RBRACE EOF ]
stmt -> stmt SEMICOLON stmt . [ SEMICOLON RBRACE EOF ]
## Transitions:
## Reductions:
-- On SEMICOLON RBRACE EOF
--   reduce production stmt -> stmt SEMICOLON stmt

State 103:
## Known stack suffix:
## WHILE expr LBRACE stmt
## LR(1) items:
stmt -> stmt . SEMICOLON stmt [ SEMICOLON RBRACE ]
stmt -> WHILE expr LBRACE stmt . RBRACE [ SEMICOLON RBRACE EOF ]
## Transitions:
-- On SEMICOLON shift to state 101
-- On RBRACE shift to state 104
## Reductions:

State 104:
## Known stack suffix:
## WHILE expr LBRACE stmt RBRACE
## LR(1) items:
stmt -> WHILE expr LBRACE stmt RBRACE . [ SEMICOLON RBRACE EOF ]
## Transitions:
## Reductions:
-- On SEMICOLON RBRACE EOF
--   reduce production stmt -> WHILE expr LBRACE stmt RBRACE

State 105:
## Known stack suffix:
## stmt
## LR(1) items:
program -> stmt . EOF [ # ]
stmt -> stmt . SEMICOLON stmt [ SEMICOLON EOF ]
## Transitions:
-- On SEMICOLON shift to state 101
-- On EOF shift to state 106
## Reductions:

State 106:
## Known stack suffix:
## stmt EOF
## LR(1) items:
program -> stmt EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production program -> stmt EOF

State 107:
## Known stack suffix:
## program
## LR(1) items:
program' -> program . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept program

